@using MobileStore.Models
@model MobileStore.Models.CreatePhoneModel

@{
    ViewBag.Title = "CreatePhone";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CreatePhoneModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resolution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Resolution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Resolution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GPU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GPU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GPU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MainCamera, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MainCamera, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MainCamera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecondaryCamera, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecondaryCamera, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondaryCamera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BatteryCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BatteryCapacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BatteryCapacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RealseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group date" id="datetimepicker10">
                    @Html.EditorFor(model => model.RealseDate, new { htmlAttributes = new { @class = "form-control" } })
                     <span class="input-group-addon">
                         <span class="glyphicon glyphicon-calendar">
                         </span>
                      </span>
                    @Html.ValidationMessageFor(model => model.RealseDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Select OEM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OEMID, new SelectList((List<ModelOEM>)ViewData["OEMS"], "ID", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OEMID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Add Images", new { @class="control-label col-md-2"})
            <div class="col-md-10">
                <input type="url" id="imgUrl" class="form-control" />
                <input id="addimg" type="button" class="btn btn-default" value="Save URL" style="float:left" onclick='SaveUrl()' />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <img id="img1" src="" class="img-thumbnail" width="100" height="100" style="display:none;" />
                @Html.HiddenFor(model => model.ImageUrl[0])
                <img id="img2" src=""  class="img-thumbnail" width="100" height="100" style="display:none;" />
                @Html.HiddenFor(model => model.ImageUrl[1])
                <img id="img3" src=""  class="img-thumbnail" width="100" height="100" style="display:none;" />
                @Html.HiddenFor(model => model.ImageUrl[2])
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    function SaveUrl() {
        var url = document.getElementById("imgUrl").value;
        SaveImgUrl(url);
        ClearUrl();
    }

    function SaveImgUrl(url) {
        var img = document.getElementById("img1");
        var img2 = document.getElementById("img2");
        var img3 = document.getElementById("img3");
        var imgUrl1 = document.getElementById("ImageUrl[0]");
        var imgUrl2 = document.getElementById("ImageUrl[1]");
        var imgUrl3 = document.getElementById("ImageUrl[2]");
        if (img.getAttribute('src') == "") {
            img.src = url;
            img.style = "block";
            imgUrl1.innerHTML = url;
        }
        else if (img2.getAttribute('src') == "") {
            img2.src = url;
            img2.style = "block";
            imgUrl2.innerHTML = url;
        }
        else if (img3.getAttribute('src') == "") {
            img3.src = url;
            img3.style = "block";
            imgUrl3.innerHTML = url;
        }
        else {
            img.src = url;
            img.style = "block";
        }
    }

    function ClearUrl() {
        document.getElementById("ImgUrl").value = "";
    }
        
</script>

